name: Maven Build and Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean install --file pom.xml

    - name: Extract Version from Branch Name
      id: extract-version
      run: |
        BRANCH_NAME=${GITHUB_HEAD_REF}
        VERSION_NUMBER=${BRANCH_NAME#release/}
        # Check if the version number is missing a patch version
        if [[ ! $VERSION_NUMBER =~ \.[0-9]+\.[0-9]+ ]]; then
          VERSION_NUMBER="${VERSION_NUMBER}.0"
        fi
        echo "VERSION_NUMBER=${VERSION_NUMBER}" >> $GITHUB_ENV

    - name: Extract Release Notes
      id: release-notes
      run: |
        VERSION_NUMBER=${{ env.VERSION_NUMBER }}
        ESCAPED_VERSION_NUMBER=$(echo $VERSION_NUMBER | sed 's/[][*^$.\]/\\&/g')  # Escapes regex characters
        RELEASE_NOTES=$(awk "/^### \[?$ESCAPED_VERSION_NUMBER\]?/{flag=1; next} /^##/{flag=0} flag" README.md)
        RELEASE_NOTES="${RELEASE_NOTES//'%'/'%25'}"
        RELEASE_NOTES="${RELEASE_NOTES//$'\n'/'%0A'}"
        RELEASE_NOTES="${RELEASE_NOTES//$'\r'/'%0D'}"
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
        echo "RELEASE_NOTES=$RELEASE_NOTES" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION_NUMBER }}
        release_name: Release ${{ env.VERSION_NUMBER }}
        body: ${{ env.RELEASE_NOTES }}
